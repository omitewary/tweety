{"ast":null,"code":"import { SET_SEARCH, UPDATE_SEARCH_TERM, MOST_TWEETED_TERM } from './types';\nimport store from '../store';\nexport const setSearch = event => dispatch => {\n  dispatch({\n    type: SET_SEARCH,\n    payload: event.target.value\n  });\n};\nexport const trackTweets = () => dispatch => {\n  const searchTerm = store.getState().setSearch.searchTerm;\n  fetch(\"/setSearchTerm\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      searchTerm\n    })\n  }).then(res => {\n    res.json().then(data => {\n      //console.log('data : ', data)\n      dispatch({\n        type: UPDATE_SEARCH_TERM,\n        payload: searchTerm\n      });\n    });\n  });\n};\nexport const setTweetCount = payload => dispatch => {\n  fetch(\"/setCount\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      payload\n    })\n  }).then(res => {\n    res.json().then(data => {\n      dispatch({\n        type: MOST_TWEETED_TERM,\n        payload: {\n          mostTweetedTerm: data.searchedTerm,\n          count: data.notificationCounter\n        }\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/omitewary/project/PC/tweets/client/src/actions/search.action.js"],"names":["SET_SEARCH","UPDATE_SEARCH_TERM","MOST_TWEETED_TERM","store","setSearch","event","dispatch","type","payload","target","value","trackTweets","searchTerm","getState","fetch","method","headers","body","JSON","stringify","then","res","json","data","setTweetCount","mostTweetedTerm","searchedTerm","count","notificationCounter"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,iBAAzC,QAAkE,SAAlE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAWC,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,UADC;AAEPQ,IAAAA,OAAO,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAFf,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,MAAML,QAAQ,IAAI;AACzC,QAAMM,UAAU,GAAGT,KAAK,CAACU,QAAN,GAAiBT,SAAjB,CAA2BQ,UAA9C;AACAE,EAAAA,KAAK,CAAC,gBAAD,EAAmB;AAChBC,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD,KAFO;AAMhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA;AAAF,KAAf;AANU,GAAnB,CAAL,CAOOQ,IAPP,CAOYC,GAAG,IAAI;AACXA,IAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBG,IAAI,IAAI;AACpB;AACAjB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,kBADD;AAELO,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CAAR;AAIH,KAND;AAOH,GAfL;AAgBH,CAlBM;AAoBP,OAAO,MAAMY,aAAa,GAAIhB,OAAD,IAAaF,QAAQ,IAAI;AAClDQ,EAAAA,KAAK,CAAC,WAAD,EAAc;AACfC,IAAAA,MAAM,EAAE,MADO;AAEfC,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD,KAFM;AAMfC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,MAAAA;AAAF,KAAf;AANS,GAAd,CAAL,CAOGY,IAPH,CAOQC,GAAG,IAAG;AACVA,IAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBG,IAAI,IAAI;AAEpBjB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,iBADD;AAELM,QAAAA,OAAO,EAAC;AAAEiB,UAAAA,eAAe,EAAEF,IAAI,CAACG,YAAxB;AAAsCC,UAAAA,KAAK,EAAEJ,IAAI,CAACK;AAAlD;AAFH,OAAD,CAAR;AAIH,KAND;AAQH,GAhBD;AAiBH,CAlBM","sourcesContent":["import { SET_SEARCH, UPDATE_SEARCH_TERM, MOST_TWEETED_TERM } from './types';\nimport store from '../store';\n\nexport const setSearch = (event) => dispatch => {\n    dispatch({\n      type: SET_SEARCH,\n      payload: event.target.value\n    });  \n};\n\nexport const trackTweets = () => dispatch => {\n    const searchTerm = store.getState().setSearch.searchTerm;\n    fetch(\"/setSearchTerm\", {\n            method: \"POST\",\n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n            },\n            body: JSON.stringify({ searchTerm })\n        }).then(res => {\n            res.json().then(data => {\n                //console.log('data : ', data)\n                dispatch({\n                    type: UPDATE_SEARCH_TERM,\n                    payload: searchTerm\n                });\n            })\n        })\n}\n\nexport const setTweetCount = (payload) => dispatch => {\n    fetch(\"/setCount\", {\n        method: \"POST\",\n        headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        },\n        body: JSON.stringify({ payload })\n    }).then(res =>{\n        res.json().then(data => {\n\n            dispatch({\n                type: MOST_TWEETED_TERM,\n                payload:{ mostTweetedTerm: data.searchedTerm, count: data.notificationCounter}\n            })\n        })\n        \n    })\n}\n"]},"metadata":{},"sourceType":"module"}