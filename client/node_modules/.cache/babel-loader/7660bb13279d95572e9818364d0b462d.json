{"ast":null,"code":"var _jsxFileName = \"/Users/omitewary/project/PC/tweets/client/src/components/TweetList.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport socketIOClient from \"socket.io-client\";\nimport CardComponent from './CardComponent';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Link from '@material-ui/core/Link';\nimport { notify } from '../actions/notify.action';\nimport { trackTweets } from '../actions/search.action';\nimport store from '../store';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n    marginTop: 34\n  },\n  input: {\n    display: 'none'\n  },\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  fab: {\n    margin: theme.spacing(1)\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  },\n  playBtn: {\n    backgroundColor: 'Blue'\n  }\n});\n\nclass TweetList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      searchTerm: store.getState().trackTweets.searchTermUpdated,\n      totalList: [],\n      togglePlayState: 'resume'\n    };\n    this.handlePause = this.handlePause.bind(this);\n    this.togglePlay = this.togglePlay.binf(this);\n    this.count = 0;\n  }\n\n  handlePause(event) {\n    fetch(\"/pause\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  componentDidMount() {\n    let socket = socketIOClient('http://localhost:3000/');\n\n    if (process.env.NODE_ENV === 'production') {\n      socket = socketIOClient('https://guarded-wave-15906.herokuapp.com');\n    }\n\n    const notify = this.props.notify;\n    socket.on('connect', () => {\n      console.log(\"Socket Connected\");\n      socket.on(\"tweets\", data => {\n        this.count += 1;\n        notify(this.count);\n        let ogList = [data].concat(this.state.totalList);\n        let newList = [data].concat(this.state.items);\n\n        if (newList.length <= 25) {\n          //totalList stores all the incoming tweets\n          //items stores tweets which is has been loaded\n          this.setState({\n            items: newList,\n            totalList: ogList\n          });\n        } else this.setState({\n          totalList: ogList\n        });\n      });\n    });\n    socket.on('disconnect', () => {\n      socket.off(\"tweets\");\n      socket.removeAllListeners(\"tweets\");\n      console.info(\"Socket Disconnected\");\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (store.getState().notify.notificationCounter === 0) {\n      //If notofication Icon is clicked then couter wikk reset to 0\n      this.count = 0;\n    }\n\n    if (prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n      this.setState({\n        searchTerm: store.getState().trackTweets.searchTermUpdated\n      });\n    }\n\n    if (prevState.searchTerm && prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n      this.setState({\n        items: [],\n        totalList: []\n      });\n    }\n  }\n  /**\n   * @description Function to load more tweets\n   */\n\n\n  loadMoreTweets() {\n    const items = this.state.items;\n    let duplicateList = items.concat(this.state.totalList);\n    let newList = [...new Set(duplicateList)]; //remove duplicate items after concatinating\n\n    this.setState({\n      items: newList\n    });\n  }\n\n  togglePlay() {\n    this.setState({\n      togglePlayState: !this.state.togglePlayState\n    }, () => {\n      if (this.state.togglePlayState === 'resume') {\n        trackTweets();\n      } else {\n        this.handlePause();\n      }\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          totalList = _this$state.totalList,\n          togglePlayState = _this$state.togglePlayState;\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          trackTweets = _this$props.trackTweets;\n    const bull = React.createElement(\"span\", {\n      className: classes.bullet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u2022\");\n    let itemsCards = React.createElement(TransitionGroup, {\n      className: \"tweet_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, items.map((x, id) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(CardComponent, {\n      data: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))));\n    {\n      /*let searchControls =\n       <div>\n         <TextField style={{padding: 24, width:'13%'}}\n             id=\"searchInput\"\n             placeholder=\"What are you looking for?\"\n             margin=\"normal\"\n             value={this.state.searchTerm}\n             onChange={this.handleChange}\n             onKeyPress={this.handleKeyPress}\n         />\n         <Button \n             variant=\"contained\" \n             color=\"primary\" \n             className={classes.button}\n             onClick={() => {this.handleSearch()}}\n         >\n             Load Tweets\n         </Button>\n      </div>*/\n    }\n    {\n      /*let filterControls = <div>\n       <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" style={controlStyle} onClick={trackTweets}><i className=\"material-icons\">play_arrow</i></a>\n       <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" onClick={this.handlePause} ><i className=\"material-icons\">pause</i></a>\n       <p>\n         <input type=\"checkbox\" id=\"test5\" />\n         <label htmlFor=\"test5\">Retweets</label>\n       </p>\n      </div>*/\n    }\n    let filterControls = React.createElement(\"div\", {\n      onClick: () => {\n        this.togglePlay();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      \"aria-label\": \"add\",\n      className: classes.fab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, togglePlayState === 'resume' ? React.createElement(PlayIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }) : React.createElement(PauseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })));\n    let controls = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, items.length > 0 ? filterControls : null);\n    let loading = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"flow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Listening to Streams\"), React.createElement(\"div\", {\n      className: \"progress lime lighten-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"indeterminate pink accent-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m4 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, items.length > 0 ? controls : null)), React.createElement(\"div\", {\n      className: \"history_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Word of the Day\"), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"), React.createElement(Typography, {\n      className: classes.pos,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"adjective\"), React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"well meaning and kindly.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), '\"a benevolent smile\"')), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Learn More\")))), React.createElement(\"div\", {\n      className: \"col s12 m4 l4 tweet_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, items.length > 0 ? itemsCards : loading)), React.createElement(\"div\", {\n      className: \"col s12 m4 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), items.length >= 25 && items.length !== totalList.length ? React.createElement(\"div\", {\n      className: \"load_more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Link, {\n      component: \"button\",\n      variant: \"body2\",\n      onClick: () => {\n        this.loadMoreTweets();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Load More\")) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notify: state.notify,\n  trackTweets: state.trackTweets\n});\n\nconst controlStyle = {\n  marginRight: \"5px\"\n};\nexport default connect(mapStateToProps, {\n  notify,\n  trackTweets\n})(withStyles(useStyles)(TweetList)); //export default TweetList;","map":{"version":3,"sources":["/Users/omitewary/project/PC/tweets/client/src/components/TweetList.js"],"names":["React","Component","Fragment","connect","CSSTransition","TransitionGroup","socketIOClient","CardComponent","Button","withStyles","Link","notify","trackTweets","store","Card","CardActions","CardContent","Typography","Fab","useStyles","theme","button","margin","spacing","marginTop","input","display","card","minWidth","bullet","transform","title","fontSize","pos","marginBottom","fab","extendedIcon","marginRight","playBtn","backgroundColor","TweetList","constructor","props","state","items","searchTerm","getState","searchTermUpdated","totalList","togglePlayState","handlePause","bind","togglePlay","binf","count","event","fetch","method","headers","componentDidMount","socket","process","env","NODE_ENV","on","console","log","data","ogList","concat","newList","length","setState","off","removeAllListeners","info","componentDidUpdate","prevProps","prevState","notificationCounter","loadMoreTweets","duplicateList","Set","render","classes","bull","itemsCards","map","x","id","filterControls","controls","loading","mapStateToProps","controlStyle"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport socketIOClient from \"socket.io-client\";\nimport CardComponent from './CardComponent';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Link from '@material-ui/core/Link';\nimport { notify } from '../actions/notify.action';\nimport { trackTweets } from '../actions/search.action';\nimport store from '../store';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from \"@material-ui/core/Fab\";\n\n\nconst useStyles = theme => ({\n    button: {\n        margin: theme.spacing(1),\n        marginTop:34\n    },\n    input: {\n        display: 'none',\n    },\n    card: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    fab: {\n      margin: theme.spacing(1)\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1)\n    },\n    playBtn:{\n      backgroundColor:'Blue'\n    }\n});\n\n\nclass TweetList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        items: [], \n        searchTerm: store.getState().trackTweets.searchTermUpdated, \n        totalList: [],\n        togglePlayState: 'resume' \n    };\n    this.handlePause = this.handlePause.bind(this);\n    this.togglePlay = this.togglePlay.binf(this);\n    this.count = 0;\n\n  }\n\n  handlePause(event) {\n    fetch(\"/pause\",\n      {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n  }\n\ncomponentDidMount() {\n  let socket = socketIOClient('http://localhost:3000/');\n  if(process.env.NODE_ENV === 'production') { socket = \n    socketIOClient('https://guarded-wave-15906.herokuapp.com') \n  }\n  const { notify } = this.props;\n\n  socket.on('connect', () => {\n    console.log(\"Socket Connected\");\n\n    socket.on(\"tweets\", data => {\n        this.count += 1;\n        notify(this.count)\n        let ogList = [data].concat(this.state.totalList);\n        let newList = [data].concat(this.state.items);\n        if (newList.length <=25) {\n            //totalList stores all the incoming tweets\n            //items stores tweets which is has been loaded\n            this.setState({ items: newList, totalList: ogList });\n        } \n        else this.setState({totalList: ogList})\n    });\n  });\n\n  socket.on('disconnect', () => {\n    socket.off(\"tweets\")\n    socket.removeAllListeners(\"tweets\");\n    console.info(\"Socket Disconnected\");\n  });\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n    if (store.getState().notify.notificationCounter === 0) {\n        //If notofication Icon is clicked then couter wikk reset to 0\n        this.count = 0;\n    }\n    if (prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n        this.setState({searchTerm: store.getState().trackTweets.searchTermUpdated})\n    }\n    if (prevState.searchTerm && prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n        this.setState({items: [], totalList:[]})\n    }\n}\n\n\n\n/**\n * @description Function to load more tweets\n */\nloadMoreTweets() {\n    const { items } = this.state;\n    let duplicateList = items.concat(this.state.totalList)\n    let newList = [...new Set(duplicateList)]; //remove duplicate items after concatinating\n    this.setState({items : newList})\n}\n\ntogglePlay() {\n  this.setState({togglePlayState: !this.state.togglePlayState}, () =>{\n    if (this.state.togglePlayState === 'resume') {\n      trackTweets();\n    } else {\n      this.handlePause();\n    }\n  })\n}\n\nrender() {\n    const { items, totalList, togglePlayState } = this.state;\n    const { classes, trackTweets } = this.props;\n    const bull = <span className={classes.bullet}>•</span>;\n\n    let itemsCards = <TransitionGroup className=\"tweet_container\">\n        {\n            items.map((x, id) =>\n                <CSSTransition  key={id} timeout={500}>                \n                    <CardComponent data={x} />\n                </CSSTransition>\n            )\n        }\n    </TransitionGroup>;\n\n    {/*let searchControls =\n      <div>\n        <TextField style={{padding: 24, width:'13%'}}\n            id=\"searchInput\"\n            placeholder=\"What are you looking for?\"\n            margin=\"normal\"\n            value={this.state.searchTerm}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n        />\n        <Button \n            variant=\"contained\" \n            color=\"primary\" \n            className={classes.button}\n            onClick={() => {this.handleSearch()}}\n        >\n            Load Tweets\n        </Button>\n    </div>*/}\n\n    {/*let filterControls = <div>\n      <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" style={controlStyle} onClick={trackTweets}><i className=\"material-icons\">play_arrow</i></a>\n      <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" onClick={this.handlePause} ><i className=\"material-icons\">pause</i></a>\n      <p>\n        <input type=\"checkbox\" id=\"test5\" />\n        <label htmlFor=\"test5\">Retweets</label>\n      </p>\n  </div>*/}\n\n    let filterControls = <div onClick={()=>{this.togglePlay()}}>\n      <Fab aria-label=\"add\" className={classes.fab}>\n        {togglePlayState === 'resume' ? <PlayIcon/> : <PauseIcon/>}\n      </Fab>\n    </div>\n\n    let controls = <div>\n      {\n        items.length > 0 ? filterControls : null\n      }\n    </div>\n\n    let loading = <div>\n      <p className=\"flow-text\">Listening to Streams</p>\n      <div className=\"progress lime lighten-3\">\n        <div className=\"indeterminate pink accent-1\"></div>\n      </div>\n    </div>\n\n    return (\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col s12 m4 l4\">\n                    <div className=\"input-field col s12\">\n                        {items.length > 0 ? controls : null}\n                    </div>\n                </div>\n                <div className=\"history_container\">\n                  <Card className={classes.card}>\n                      <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                          Word of the Day\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                          be\n                          {bull}\n                          nev\n                          {bull}o{bull}\n                          lent\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                          adjective\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                          well meaning and kindly.\n                          <br />\n                          {'\"a benevolent smile\"'}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                      </CardActions>\n                    </Card>\n                  </div>\n                <div className=\"col s12 m4 l4 tweet_body_content\">\n                    \n                    <div>\n                        {items.length > 0 ? itemsCards : loading}\n                    </div>\n                  </div>\n                <div className=\"col s12 m4 l4\"></div>\n              </div>\n            {\n                items.length >= 25 && items.length !== totalList.length? \n                <div className=\"load_more\">\n                  <Link\n                    component=\"button\"\n                    variant=\"body2\"\n                    onClick={() => {this.loadMoreTweets()}}\n                    >\n                    Load More\n                  </Link> \n                </div>: null\n                \n            }\n\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    notify: state.notify,\n    trackTweets: state.trackTweets\n});\n\nconst controlStyle = {\n  marginRight: \"5px\"\n};\nexport default connect(mapStateToProps, { notify, trackTweets })(withStyles(useStyles)(TweetList));\n//export default TweetList;"]},"metadata":{},"sourceType":"module"}