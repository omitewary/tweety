{"ast":null,"code":"var _jsxFileName = \"/Users/omitewary/project/PC/tweets/client/src/components/TweetList.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TextField from '@material-ui/core/TextField';\nimport socketIOClient from \"socket.io-client\";\nimport CardComponent from './CardComponent';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Link from '@material-ui/core/Link';\nimport { notify } from '../actions/notify.action';\nimport { trackTweets } from '../actions/search.action';\nimport store from '../store';\n\nconst useStyles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n    marginTop: 34\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nclass TweetList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      searchTerm: store.getState().trackTweets.searchTermUpdated,\n      totalList: []\n    };\n    this.handlePause = this.handlePause.bind(this);\n    this.count = 0;\n  }\n\n  handlePause(event) {\n    fetch(\"/pause\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient('http://localhost:3000/');\n\n    if (process.env.NODE_ENV === 'production') {\n      socket = socketIOClient('https://guarded-wave-15906.herokuapp.com');\n    }\n\n    const notify = this.props.notify;\n    socket.on('connect', () => {\n      console.log(\"Socket Connected\");\n      socket.on(\"tweets\", data => {\n        this.count += 1;\n        notify(this.count);\n        let ogList = [data].concat(this.state.totalList);\n        let newList = [data].concat(this.state.items);\n\n        if (newList.length <= 25) {\n          //totalList stores all the incoming tweets\n          //items stores tweets which is has been loaded\n          this.setState({\n            items: newList,\n            totalList: ogList\n          });\n        } else this.setState({\n          totalList: ogList\n        });\n      });\n    });\n    socket.on('disconnect', () => {\n      socket.off(\"tweets\");\n      socket.removeAllListeners(\"tweets\");\n      console.info(\"Socket Disconnected\");\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (store.getState().notify.notificationCounter === 0) {\n      //If notofication Icon is clicked then couter wikk reset to 0\n      this.count = 0;\n    }\n\n    if (prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n      this.setState({\n        searchTerm: store.getState().trackTweets.searchTermUpdated\n      });\n    }\n\n    if (prevState.searchTerm && prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n      this.setState({\n        items: [],\n        totalList: []\n      });\n    }\n  }\n  /**\n   * @description Function to load more tweets\n   */\n\n\n  loadMoreTweets() {\n    const items = this.state.items;\n    let duplicateList = items.concat(this.state.totalList);\n    let newList = [...new Set(duplicateList)]; //remove duplicate items after concatinating\n\n    this.setState({\n      items: newList\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          totalList = _this$state.totalList;\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          trackTweets = _this$props.trackTweets;\n    let itemsCards = React.createElement(TransitionGroup, {\n      className: \"tweet_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, items.map((x, id) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(CardComponent, {\n      data: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))));\n    {\n      /*let searchControls =\n       <div>\n         <TextField style={{padding: 24, width:'13%'}}\n             id=\"searchInput\"\n             placeholder=\"What are you looking for?\"\n             margin=\"normal\"\n             value={this.state.searchTerm}\n             onChange={this.handleChange}\n             onKeyPress={this.handleKeyPress}\n         />\n         <Button \n             variant=\"contained\" \n             color=\"primary\" \n             className={classes.button}\n             onClick={() => {this.handleSearch()}}\n         >\n             Load Tweets\n         </Button>\n       </div>\n      let filterControls = <div>\n       <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" style={controlStyle} onClick={trackTweets}><i className=\"material-icons\">play_arrow</i></a>\n       <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" onClick={this.handlePause} ><i className=\"material-icons\">pause</i></a>\n       <p>\n         <input type=\"checkbox\" id=\"test5\" />\n         <label htmlFor=\"test5\">Retweets</label>\n       </p>\n      </div>\n      let controls = <div>\n       {\n         items.length > 0 ? filterControls : null\n       }\n      </div>*/\n    }\n    let loading = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"flow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Listening to Streams\"), React.createElement(\"div\", {\n      className: \"progress lime lighten-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"indeterminate pink accent-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m4 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, items.length > 0 ? itemsCards : loading)), React.createElement(\"div\", {\n      className: \"col s12 m4 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), items.length >= 25 && items.length !== totalList.length ? React.createElement(Link, {\n      component: \"button\",\n      variant: \"body2\",\n      onClick: () => {\n        this.loadMoreTweets();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Load More\") : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notify: state.notify,\n  trackTweets: state.trackTweets\n});\n\nconst controlStyle = {\n  marginRight: \"5px\"\n};\nexport default connect(mapStateToProps, {\n  notify,\n  trackTweets\n})(withStyles(useStyles)(TweetList)); //export default TweetList;","map":{"version":3,"sources":["/Users/omitewary/project/PC/tweets/client/src/components/TweetList.js"],"names":["React","Component","Fragment","connect","CSSTransition","TransitionGroup","TextField","socketIOClient","CardComponent","Button","withStyles","Link","notify","trackTweets","store","useStyles","theme","button","margin","spacing","marginTop","input","display","TweetList","constructor","props","state","items","searchTerm","getState","searchTermUpdated","totalList","handlePause","bind","count","event","fetch","method","headers","componentDidMount","socket","process","env","NODE_ENV","on","console","log","data","ogList","concat","newList","length","setState","off","removeAllListeners","info","componentDidUpdate","prevProps","prevState","notificationCounter","loadMoreTweets","duplicateList","Set","render","classes","itemsCards","map","x","id","loading","mapStateToProps","controlStyle","marginRight"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TextField from '@material-ui/core/TextField'\nimport socketIOClient from \"socket.io-client\";\nimport CardComponent from './CardComponent';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Link from '@material-ui/core/Link';\nimport { notify } from '../actions/notify.action';\nimport { trackTweets } from '../actions/search.action';\nimport store from '../store';\n\nconst useStyles = theme => ({\n    button: {\n        margin: theme.spacing(1),\n        marginTop:34\n    },\n    input: {\n        display: 'none',\n    }\n});\n\n\nclass TweetList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        items: [], \n        searchTerm: store.getState().trackTweets.searchTermUpdated, \n        totalList: [] \n    };\n    this.handlePause = this.handlePause.bind(this);\n    this.count = 0;\n\n  }\n\n  handlePause(event) {\n    fetch(\"/pause\",\n      {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n  }\n\ncomponentDidMount() {\n  const socket = socketIOClient('http://localhost:3000/');\n  if(process.env.NODE_ENV === 'production') { socket = \n    socketIOClient('https://guarded-wave-15906.herokuapp.com') \n  }\n  const { notify } = this.props;\n\n  socket.on('connect', () => {\n    console.log(\"Socket Connected\");\n\n    socket.on(\"tweets\", data => {\n        this.count += 1;\n        notify(this.count)\n        let ogList = [data].concat(this.state.totalList);\n        let newList = [data].concat(this.state.items);\n        if (newList.length <=25) {\n            //totalList stores all the incoming tweets\n            //items stores tweets which is has been loaded\n            this.setState({ items: newList, totalList: ogList });\n        } \n        else this.setState({totalList: ogList})\n    });\n  });\n\n  socket.on('disconnect', () => {\n    socket.off(\"tweets\")\n    socket.removeAllListeners(\"tweets\");\n    console.info(\"Socket Disconnected\");\n  });\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n    if (store.getState().notify.notificationCounter === 0) {\n        //If notofication Icon is clicked then couter wikk reset to 0\n        this.count = 0;\n    }\n    if (prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n        this.setState({searchTerm: store.getState().trackTweets.searchTermUpdated})\n    }\n    if (prevState.searchTerm && prevState.searchTerm != store.getState().trackTweets.searchTermUpdated) {\n        this.setState({items: [], totalList:[]})\n    }\n}\n\n\n\n/**\n * @description Function to load more tweets\n */\nloadMoreTweets() {\n    const { items } = this.state;\n    let duplicateList = items.concat(this.state.totalList)\n    let newList = [...new Set(duplicateList)]; //remove duplicate items after concatinating\n    this.setState({items : newList})\n}\n\nrender() {\n    const { items, totalList } = this.state;\n    const { classes, trackTweets } = this.props;\n\n    let itemsCards = <TransitionGroup className=\"tweet_container\">\n        {\n            items.map((x, id) =>\n                <CSSTransition  key={id} timeout={500}>                \n                    <CardComponent data={x} />\n                </CSSTransition>\n            )\n        }\n    </TransitionGroup>;\n\n    {/*let searchControls =\n      <div>\n        <TextField style={{padding: 24, width:'13%'}}\n            id=\"searchInput\"\n            placeholder=\"What are you looking for?\"\n            margin=\"normal\"\n            value={this.state.searchTerm}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n        />\n        <Button \n            variant=\"contained\" \n            color=\"primary\" \n            className={classes.button}\n            onClick={() => {this.handleSearch()}}\n        >\n            Load Tweets\n        </Button>\n      </div>\n\n    let filterControls = <div>\n      <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" style={controlStyle} onClick={trackTweets}><i className=\"material-icons\">play_arrow</i></a>\n      <a className=\"btn-floating btn-small waves-effect waves-light pink accent-2\" onClick={this.handlePause} ><i className=\"material-icons\">pause</i></a>\n      <p>\n        <input type=\"checkbox\" id=\"test5\" />\n        <label htmlFor=\"test5\">Retweets</label>\n      </p>\n    </div>\n\n    let controls = <div>\n      {\n        items.length > 0 ? filterControls : null\n      }\n    </div>*/}\n\n    let loading = <div>\n      <p className=\"flow-text\">Listening to Streams</p>\n      <div className=\"progress lime lighten-3\">\n        <div className=\"indeterminate pink accent-1\"></div>\n      </div>\n    </div>\n\n    return (\n        <Fragment>\n            <div className=\"row\">\n                {/*<div className=\"col s12 m4 l4\">\n                    <div className=\"input-field col s12\">\n                        {searchControls}\n                        {items.length > 0 ? controls : null}\n                    </div>\n                </div>*/}\n                <div className=\"col s12 m4 l4\">\n                    <div>\n                        {items.length > 0 ? itemsCards : loading}\n                    </div>\n                </div>\n                <div className=\"col s12 m4 l4\">\n                </div>\n            </div>\n            {\n                items.length >= 25 && items.length !== totalList.length? \n                <Link\n                    component=\"button\"\n                    variant=\"body2\"\n                    onClick={() => {this.loadMoreTweets()}}\n                    >\n                    Load More\n                </Link> : null\n            }\n\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    notify: state.notify,\n    trackTweets: state.trackTweets\n});\n\nconst controlStyle = {\n  marginRight: \"5px\"\n};\nexport default connect(mapStateToProps, { notify, trackTweets })(withStyles(useStyles)(TweetList));\n//export default TweetList;"]},"metadata":{},"sourceType":"module"}