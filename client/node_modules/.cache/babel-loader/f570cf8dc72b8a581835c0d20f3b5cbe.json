{"ast":null,"code":"import _defineProperty from \"/Users/omitewary/project/PC/tweets/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_SEARCH, UPDATE_SEARCH_TERM, MOST_TWEETED_TERM } from '../actions/types';\nconst initialState = {\n  searchTerm: \"\",\n  searchTermUpdated: \"\",\n  mostTweetedTerm: ''\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case SET_SEARCH:\n      return _objectSpread({}, state, {\n        searchTerm: payload\n      });\n\n    case UPDATE_SEARCH_TERM:\n      return _objectSpread({}, state, {\n        searchTermUpdated: payload\n      });\n\n    case MOST_TWEETED_TERM:\n      return _objectSpread({}, state, {\n        mostTweetedTerm: payload.searchedTerm\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/omitewary/project/PC/tweets/client/src/reducers/search.reducer.js"],"names":["SET_SEARCH","UPDATE_SEARCH_TERM","MOST_TWEETED_TERM","initialState","searchTerm","searchTermUpdated","mostTweetedTerm","state","action","type","payload","searchedTerm"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,iBAAzC,QAAkE,kBAAlE;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,iBAAiB,EAAE,EAFF;AAGjBC,EAAAA,eAAe,EAAE;AAHA,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AAAA,QAC1CC,IAD0C,GACxBD,MADwB,CAC1CC,IAD0C;AAAA,QACpCC,OADoC,GACxBF,MADwB,CACpCE,OADoC;;AAElD,UAAOD,IAAP;AACI,SAAKT,UAAL;AACI,+BACOO,KADP;AAEIH,QAAAA,UAAU,EAAEM;AAFhB;;AAIJ,SAAKT,kBAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,iBAAiB,EAAEK;AAFvB;;AAIJ,SAAKR,iBAAL;AACI,+BACOK,KADP;AAEID,QAAAA,eAAe,EAAEI,OAAO,CAACC;AAF7B;;AAIJ;AACI,aAAOJ,KAAP;AAjBR;AAmBH","sourcesContent":["import { SET_SEARCH, UPDATE_SEARCH_TERM, MOST_TWEETED_TERM } from '../actions/types';\nconst initialState = {\n    searchTerm: \"\", \n    searchTermUpdated: \"\",\n    mostTweetedTerm: ''\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action\n    switch(type) {\n        case SET_SEARCH: \n            return {\n                ...state,\n                searchTerm: payload\n            }\n        case UPDATE_SEARCH_TERM:\n            return {\n                ...state,\n                searchTermUpdated: payload\n            }\n        case MOST_TWEETED_TERM:\n            return {\n                ...state,\n                mostTweetedTerm: payload.searchedTerm\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}