{"ast":null,"code":"import _defineProperty from \"/Users/omitewary/project/PC/tweets/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_COUNT } from '../actions/types';\nconst initialState = {\n  notificationCounter: \"\"\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n  console.log();\n\n  switch (type) {\n    case SET_COUNT:\n      return _objectSpread({}, state, {\n        notificationCounter: payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/omitewary/project/PC/tweets/client/src/reducers/notify.reducers.js"],"names":["SET_COUNT","initialState","notificationCounter","state","action","type","payload","console","log"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,mBAAmB,EAAE;AADJ,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AAAA,QAC1CC,IAD0C,GACxBD,MADwB,CAC1CC,IAD0C;AAAA,QACpCC,OADoC,GACxBF,MADwB,CACpCE,OADoC;AAElDC,EAAAA,OAAO,CAACC,GAAR;;AACA,UAAOH,IAAP;AACI,SAAKL,SAAL;AACI,+BACOG,KADP;AAEID,QAAAA,mBAAmB,EAAEI;AAFzB;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH","sourcesContent":["import { SET_COUNT } from '../actions/types';\nconst initialState = {\n    notificationCounter: \"\", \n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action\n    console.log()\n    switch(type) {\n        case SET_COUNT: \n            return {\n                ...state,\n                notificationCounter: payload\n            }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}