{"ast":null,"code":"import { SET_SEARCH, UPDATE_SEARCH_TERM } from './types';\nimport store from '../store';\nexport const setSearch = event => dispatch => {\n  dispatch({\n    type: SET_SEARCH,\n    payload: event.target.value\n  });\n};\nexport const trackTweets = () => dispatch => {\n  const searchTerm = store.getState().setSearch.searchTerm;\n  fetch(\"/setSearchTerm\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      searchTerm\n    })\n  }).then(res => {\n    res.json().then(data => {\n      //console.log('data : ', data)\n      dispatch({\n        type: UPDATE_SEARCH_TERM,\n        payload: searchTerm\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/omitewary/project/PC/tweets/client/src/actions/search.action.js"],"names":["SET_SEARCH","UPDATE_SEARCH_TERM","store","setSearch","event","dispatch","type","payload","target","value","trackTweets","searchTerm","getState","fetch","method","headers","body","JSON","stringify","then","res","json","data"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,kBAArB,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAWC,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,UADC;AAEPO,IAAAA,OAAO,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAFf,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,MAAML,QAAQ,IAAI;AACzC,QAAMM,UAAU,GAAGT,KAAK,CAACU,QAAN,GAAiBT,SAAjB,CAA2BQ,UAA9C;AACAE,EAAAA,KAAK,CAAC,gBAAD,EACD;AACIC,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD,KAFb;AAMIC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA;AAAF,KAAf;AANV,GADC,CAAL,CAQOQ,IARP,CAQYC,GAAG,IAAI;AACXA,IAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBG,IAAI,IAAI;AACpB;AACAjB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,kBADD;AAELM,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CAAR;AAIH,KAND;AAOH,GAhBL;AAiBH,CAnBM","sourcesContent":["import { SET_SEARCH, UPDATE_SEARCH_TERM } from './types';\nimport store from '../store';\n\nexport const setSearch = (event) => dispatch => {\n    dispatch({\n      type: SET_SEARCH,\n      payload: event.target.value\n    });  \n};\n\nexport const trackTweets = () => dispatch => {\n    const searchTerm = store.getState().setSearch.searchTerm;\n    fetch(\"/setSearchTerm\",\n        {\n            method: \"POST\",\n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n            },\n            body: JSON.stringify({ searchTerm })\n        }).then(res => {\n            res.json().then(data => {\n                //console.log('data : ', data)\n                dispatch({\n                    type: UPDATE_SEARCH_TERM,\n                    payload: searchTerm\n                });\n            })\n        })\n}\n"]},"metadata":{},"sourceType":"module"}